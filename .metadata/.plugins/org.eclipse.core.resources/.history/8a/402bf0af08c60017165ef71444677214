package chrome.webdriver.hoopers;
import java.sql.Connection;
import java.sql.DriverManager;

import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;


import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.logging.LogEntries;
import org.openqa.selenium.logging.LogEntry;
import org.openqa.selenium.logging.LogType;


/*This Test case is very simple but will give you all errors
 * on the page currently on the time of load
 * and lists them into a database connection of your choosing
 * All is required is that you enter the details required for the test below
 * and for you to enter all clickable links*/


public class pageLoad
	{
		/*******************************************Details Required for Test**********************************************/

		//CLient Log Table
		String logtable = "tbl_ErrorLog_Hoopers";
		//Website URL
		String siteUrl = "http://www.hoopers.co.za/";
		//Location of Selenium webdriver.exe
		String seleniumWebdriverLocation = "C:\\chromedriver.exe";
		//Connect credentials to database
		String urldb = "mssql6.gear.host";
		String username = "testerrorsreport";
		String password = "Rf99!Gp80K!t";
		String dbName = "testerrorsreport";
			
		/********************************************DECLARATIONS**********************************************/
		
		//ArrayLists for storing data
		ArrayList<String> urlFromSitemap = new ArrayList<String>();
		ArrayList<String> timeStamp = new ArrayList<String>();
		ArrayList<String> url = new ArrayList<String>();
		ArrayList<String> statusLevel = new ArrayList<String>();
		ArrayList<String> errorMessage = new ArrayList<String>();
		
		//Webdriver for chrome	
		WebDriver chrome;
		//Used to run Javascript funtions eg: Scrolling
		JavascriptExecutor jse;
		
		/********************************************************************************************************/
		//Connection for DB
		public Connection connectToDb()
			{

				Connection connection = null;
				String URLConnection;

				try
				{
					Class.forName("net.sourceforge.jtds.jdbc.Driver");
					URLConnection = "jdbc:jtds:sqlserver://"+urldb+";"+dbName+";user="+username+";password="+password+";";
					connection = DriverManager.getConnection(URLConnection);
				}

				catch (ClassNotFoundException e)
				{
					e.printStackTrace();
				}

				catch (SQLException e)
				{
					e.printStackTrace();
				}

				return connection;
			}

		// Browser setup
		public void invokeBrowser()
			{
				try
					{
						System.setProperty("webdriver.chrome.driver", seleniumWebdriverLocation);
						chrome = new ChromeDriver();
						chrome.manage().deleteAllCookies();
						chrome.manage().window().maximize();
						chrome.manage().timeouts().implicitlyWait(120, TimeUnit.SECONDS);
						chrome.manage().timeouts().pageLoadTimeout(120, TimeUnit.SECONDS);

						chrome.get(siteUrl+"/sitemap.xml");

						
					} catch (Exception e)
					{
						e.printStackTrace();
					}

			}

		//Checks your list created
		public void processArrayList()
			{
				// Loop through the array of menu items
				try
					{
						for (int i = 0; i < urlFromSitemap.size(); i++)
							{
								chrome.get(urlFromSitemap.get(i));
								Thread.sleep(11000);
								
								// Logs the error entry from the browser console
								LogEntries le = chrome.manage().logs().get(LogType.BROWSER);
								for (LogEntry entry : le)
									{

										Long tempTime = entry.getTimestamp();
										Level tempLevel = entry.getLevel();
										String tempMessage = entry.getMessage();
										String firstReplace = tempMessage.replaceAll("\"", " ");
										String tempMessageFinal = firstReplace.replaceAll("'", " ");
										
										timeStamp.add(tempTime.toString());
										url.add(chrome.getCurrentUrl().toString());
										statusLevel.add(tempLevel.toString());
										errorMessage.add(tempMessageFinal);
									}
								chrome.navigate().back();
								Thread.sleep(2000);

							}
						closeBrowser();// calling of the closebrowser method
						
						//Connecting to DB and then and updating errors in tables
						Connection con = connectToDb();
						Statement s = con.createStatement();
						s.execute("DELETE FROM "+logtable+"");
						
						//Sending INSERT query to the database 
						for(int i = 0;i<timeStamp.size();i++)
							{
								String query = "INSERT INTO "+logtable+"(Timestamp, URL, StatusLevel, ErrorMessage) VALUES ('"+timeStamp.get(i)+"', '"+url.get(i)+"', '"+statusLevel.get(i)+"', '"+errorMessage.get(i)+"'); ";
								s.executeUpdate(query);
							}
						
						
						
					
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
				
		}
		
		//Testing all links for sitemap
		public void getSitemapLinks()
		{
		
			// get all links from page
			List<WebElement> links = chrome.findElements(By.tagName("span"));
			for(WebElement link : links){
				if(link.getText().contains(siteUrl))
					{
						urlFromSitemap.add(link.getText());
					}
			}
		}
				
		// Closes browser
		public void closeBrowser()

			{
				chrome.quit();
			}
		
		// Main Method
		public static void main(String[] args) 
			{

				pageLoad pl = new pageLoad();
				pl.invokeBrowser();	  /*Calls the method invokeBrowser() which sets up the setting for the browser*/
				
				
				pl.getSitemapLinks(); /*Calling of the getSitemapLinks() method - Opens up the sitemap url and gets all the links
				 					   *from from the web elements for the processArrayList() method*/
				
				pl.processArrayList(); /*Calling of the processArrayList() method - This runs through the list of urls,
				 						*Uses Selenium to go to them in the browser and gets the browser log for that page
				 						*then queries the database to update the rows with the errors*/



			}

	}
